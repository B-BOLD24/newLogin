#include <iostream>
#include <queue>
#include <string>
using namespace std;

// Function to display the job queue
void displayQueue(queue<string> jobQueue) 
{
    if (jobQueue.empty()) 
    {
        cout << "The job queue is empty." << endl;
        return;
    }
    cout << "Current Job Queue: ";
    while (!jobQueue.empty()) 
    {
        cout << jobQueue.front() << " ";
        jobQueue.pop();
    }
    cout << endl;
}

// Function to add a job to the queue
void addJob(queue<string>& jobQueue, const string& job) 
{
    jobQueue.push(job);
    cout << "Job \"" << job << "\" added to the queue." << endl;
}

// Function to delete a job from the queue
void deleteJob(queue<string>& jobQueue)
{
    if (jobQueue.empty()) 
    {
        cout << "No jobs to delete. The queue is empty." << endl;
    } else
    {
        cout << "Job \"" << jobQueue.front() << "\" processed and removed from the queue." << endl;
        jobQueue.pop();
    }
}

int main() 
{
    queue<string> jobQueue; // Declare a queue to store jobs
    int choice;
    string job;

    while (true) 
    {
        cout << "\n--- Job Queue Menu ---" << endl;
        cout << "1. Add Job" << endl;
        cout << "2. Delete Job" << endl;
        cout << "3. Display Jobs" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;
        cin.ignore(); // To handle the newline character left by cin

        switch (choice) 
        {
            case 1:
                cout << "Enter job description: ";
                getline(cin, job);
                addJob(jobQueue, job);
                break;

            case 2:
                deleteJob(jobQueue);
                break;

            case 3:
                displayQueue(jobQueue);
                break;

            case 4:
                cout << "Exiting the program." << endl;
                return 0;

            default:
                cout << "Invalid choice! Please try again." << endl;
        }
    }
}
